# ===================================================================
# CSPBENCH ENVIRONMENT VARIABLES (.env)
# ===================================================================
# SYSTEM INFRASTRUCTURE CONFIGURATION
# How the application runs - APIs, paths, ports, logging
#
# ⚠️  WARNING: This file contains sensitive configurations!
# 🔒 Never commit this file to git (it's in .gitignore)
# 📋 Use .env.example as template for new environments
#
# ===================================================================
# CONFIGURATION HIERARCHY (4 levels)
# ===================================================================
# 1. SYSTEM (.env)          ← This file - Infrastructure settings
# 2. EXECUTION (settings.yaml) ← Default execution configurations  
# 3. ALGORITHMS (config.py)    ← Algorithm-specific defaults
# 4. BATCH (batch.yaml)        ← Specific execution (overrides all)
#
# 🔄 PRECEDENCE: batch.yaml > settings.yaml > config.py > .env
# 
# 💡 RESPONSIBILITIES:
# .env        = INFRASTRUCTURE (ports, paths, APIs, logging)
# settings.yaml = EXPERIMENTS (default algorithms, datasets, metrics)  
# config.py     = ALGORITHMS (algorithm-specific parameters)
# batch.yaml    = EXECUTION (specific run configuration)
# ===================================================================

# =====================================================================
# SECTION 1: NCBI API CONFIGURATION
# =====================================================================
# Configuration for NCBI Entrez API integration
# Used for automatic download of biological sequence datasets
# 📚 Docs: https://www.ncbi.nlm.nih.gov/books/NBK25497/

# Email required for NCBI API usage (NCBI policy)
# NCBI_EMAIL=
# API key optional but recommended (increases request limits)
# NCBI_API_KEY=

# =====================================================================
# SECTION 2: WEB INTERFACE CONFIGURATION  
# =====================================================================
# Configuration for integrated web server
# Used when running: python main.py --web

# Host/IP where web server will bind (0.0.0.0 = any IP)
WEB_HOST=0.0.0.0

# Web server port (default: 8000)
PORT=8000

# Debug mode for web server (true = hot-reload, false = production)
WEB_DEBUG=false

# Uvicorn log level (options: critical, error, warning, info, debug, trace)
# If WEB_DEBUG=true, suggested: info. If false: warning
WEB_LOG_LEVEL=info

# Enable HTTP access logs (true/false)
# Suggested: true if WEB_DEBUG=true, false otherwise
WEB_ACCESS_LOG=true


# =====================================================================
# SECTION 3: LOGGING CONFIGURATION
# =====================================================================
# Global application logging configuration
# Available levels: DEBUG, INFO, WARNING, ERROR, CRITICAL

# Application log level
LOG_LEVEL=ERROR

# Directory for log files (relative to workspace root)
LOG_DIRECTORY=./data/logs

# Base name for log files (without extension)
LOG_BASE_NAME=cspbench

# Maximum log file size before rotation (in bytes)
LOG_MAX_BYTES=10485760

# Number of backup log files to keep
LOG_BACKUP_COUNT=5

# If true, logs are written to stdout instead of rotating log file
LOG_TO_STDOUT=false

# =====================================================================
# SECTION 4: PATH CONFIGURATION
# =====================================================================
# File system paths configuration
# Defines where CSPBench finds and saves files

SETTINGS_PATH=./config/settings.yaml
# Base directory for datasets (.fasta files, etc.)
DATASET_DIRECTORY=./data/datasets
# Base directory for batch configuration files (.yaml files)
BATCH_DIRECTORY=./data/batches
# Base directory for execution results
OUTPUT_BASE_DIRECTORY=./data/outputs

# =====================================================================
# SECTION 4.1: DATABASE PROCESS CONFIGURATION
# =====================================================================
# Configuration for dedicated database process module
# Controls which database engine and connection to use

# Database connection string or path
# For SQLite: file path (e.g., ./data/database_process.db)
# For PostgreSQL: connection string (e.g., postgresql://user:pass@host:port/db)
DB_URL=sqlite:///./data/database_process.db

# PostgreSQL Configuration 
#DB_URL=postgresql://cspbench:cspbench123@localhost:5432/cspbench_db

# =====================================================================
# SECTION 5: CLEANUP AND MAINTENANCE
# =====================================================================
# Automatic cleanup and maintenance configuration

# Force cleanup of incomplete sessions on startup
# true = remove sessions without results.json on startup
# false = keep all sessions
FORCE_CLEANUP=false
